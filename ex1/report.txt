Assume all other preconditions fulfilled, unless mentioned otherwise.


1.a) AddWorkingPeriod

Input space: String employee != null

Partition #1: starttime < 0
    test_addWorkingPeriod_part1: input: "employee != null, starttime = -1, endtime = 5",
        expected: "addWorkingPeriod(employee, starttime, endtime) = false"

Partition #2: endtime >= size
    test_addWorkingPeriod_part2a: input: "employee != null, starttime = 0, endtime = 13, size = 12",
        expected: "addWorkingPeriod(employee, starttime, endtime) = false"
    test_addWorkingPeriod_part2b: input: "employee != null, starttime = 0, endtime = 12, size = 12",
            expected: "addWorkingPeriod(employee, starttime, endtime) = false"

Partition #3: starttime > endtime
    test_addWorkingPeriod_part3: input: "employee != null, starttime = 3, endtime = 2",
        expected: "addWorkingPeriod(employee, starttime, endtime) = false"

Partition #4: starttime >= 0 && starttime < endtime && String employee != ""
    test_addWorkingPeriod_part4: input: "employee != "", starttime = 0, endtime = 3",
        expected: "addWorkingPeriod(employee, starttime, endtime) = true"

Partition #5: two employees, same time slot with only one allowed
    test_addWorkingPeriod_part5: input: "employee1 != "", employee2 != "", starttime = 1, endtime = 3",
        expected: "addWorkingPeriod(employee1, starttime, endtime) = true,
            addWorkingPeriod(employee2, starttime, endtime) = false"

Partition #6: one employee on overlapping schedules
    test_addWorkingPeriod_part6: input: "employee != null, starttime1 = 1, endtime1 = 3, starttime2 = 3, endtime2 = 4"
        expected: "addWorkingPeriod(employee, starttime1, endtime1) = true,
            addWorkingPeriod(employee, starttime2, endtime2) = false"

Partition #7: two employees on overlapping schedules
    test_addWorkingPeriod_part7: input: "employee1 = "bob", employee2 = "sam", starttime1 = 1, endtime1 = 4,
        starttime2 = 2, endtime2 = 3"
            expected: "addWorkingPeriod(employee1, starttime1, endtime1) = true,
                addWorkingPeriod(employee2, starttime2, endtime3) = true"

Partition #8: add an employee when none is required
    test_addWorkingPeriod_part8: input: "employee = "bob", starttime = 1, endtime = 3, required = 0"
        expected: "addWorkingPeriod(employee, starttime, endtime) = false"


Border cases:
    Case 1: employee = ""
        test_addWorkingPeriod_border1: input: "employee = "", starttime = 1, endtime = 3",
            expected: "addWorkingPeriod(employee, starttime, endtime) = true"

Found bugs: Method fails partition 3, method does not check if starttime > endtime



1.b) workingEmployees


Input space: starttime >= 0
             endtime < size


Partition #1: starttime > endtime
    test_workingEmployees_part1: input: "starttime = 4, endtime = 3"
        expected: "workingEmployees(4, 3) = []"

Partition #2: starttime <= endtime && schedule has employee "bob" on hours 1-3
    test_workingEmployees_part2: input: "starttime = 1, endtime = 5"
        expected: "workingEmployees(1, 5) = ["bob"]"

Partition #3: schedule has employee "bob" on hours 1-3 && schedule has employee "sam" on hours 2-5
    test_workingEmployees_part3: input: "starttime = 1, endtime = 5"
        expected: "workingEmployees(1, 5) = ["bob", "sam"]"

Partition #4: endtime = 3 && schedule has employee "bob" on hours 1-3 && schedule has employee "sam" on hours 4-5
    test_workingEmployees_part3: input: "starttime = 1, endtime = 3"
        expected: "workingEmployees(1, 3) = ["bob"]"

Border cases:
    case 1: starttime = 0 && "bob" on hours 1-3
        test_workingEmployees_border1: input: "starttime = 0, endtime = 4"
            expected: "workingEmployees(0, 4) = ["bob"]"
    case 2: endtime = starttime && "bob" on hours 1-3
        test_workingEmployees_border2: input: "starttime = 1, endtime = 1"
            expected: "workingEmployees(1, 1) = ["bob"]"
    case 3: endtime = size - 1 && "bob" on hours 1-3 && size = 12
        test_workingEmployees_border2: input: "starttime = 1, endtime = 11, size = 12"
            expected: "workingEmployees(1, 11) = ["bob"]"